{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/ynot_/source/repos/ReactTutorial/reacttutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Components/Header';\nimport Tasks from './Components/Tasks';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => {\n      if (task.id == id) {\n        task.reminder = !task.reminder;\n      }\n    }));\n  };\n\n  const addTask = () => {\n    setTasks(tasks.concat({\n      id: tasks.length,\n      text: \"new task\",\n      day: \"today\",\n      reminder: false\n    }));\n  };\n\n  const deleteTask = id => {\n    console.log('Delete', id);\n    setTasks(tasks.filter(task => task.id != id));\n  };\n\n  const [tasks, setTasks] = useState([{\n    id: 0,\n    text: \"Meeting 1\",\n    day: \"Oct 4th at 16:00\",\n    reminder: true\n  }, {\n    id: 1,\n    text: \"Get Dog Food\",\n    day: \"Oct 30th\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Pickup computer from mom\",\n    day: \"Oct 4th at 17:00\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Get harddrive\",\n    day: \"Oct 5th\",\n    reminder: true\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDeleteTask: deleteTask,\n      toggleReminder: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U0F6K4ldGY7HkQmd/bKn4TEof+k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/ynot_/source/repos/ReactTutorial/reacttutorial/src/App.js"],"names":["Header","Tasks","useState","App","toggleReminder","id","setTasks","tasks","map","task","reminder","addTask","concat","length","text","day","deleteTask","console","log","filter"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GACA;AAAA;;AACE,QAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC7BC,IAAAA,QAAQ,CAACC,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAAE,UAAIA,IAAI,CAACJ,EAAL,IAAWA,EAAf,EAAmB;AAAEI,QAAAA,IAAI,CAACC,QAAL,GAAgB,CAACD,IAAI,CAACC,QAAtB;AAAgC;AAAE,KAA7E,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpBL,IAAAA,QAAQ,CAACC,KAAK,CAACK,MAAN,CAAa;AAAEP,MAAAA,EAAE,EAAEE,KAAK,CAACM,MAAZ;AAAoBC,MAAAA,IAAI,EAAE,UAA1B;AAAsCC,MAAAA,GAAG,EAAE,OAA3C;AAAoDL,MAAAA,QAAQ,EAAE;AAA9D,KAAb,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMM,UAAU,GAAIX,EAAD,IAAQ;AACzBY,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBb,EAAtB;AACAC,IAAAA,QAAQ,CAACC,KAAK,CAACY,MAAN,CAAcV,IAAD,IAAUA,IAAI,CAACJ,EAAL,IAAWA,EAAlC,CAAD,CAAR;AACD,GAHD;;AAKA,QAAM,CAACE,KAAD,EAAQD,QAAR,IAAoBJ,QAAQ,CAAC,CACjC;AACEG,IAAAA,EAAE,EAAE,CADN;AAEES,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,GAAG,EAAE,kBAHP;AAIEL,IAAAA,QAAQ,EAAE;AAJZ,GADiC,EAOjC;AACEL,IAAAA,EAAE,EAAE,CADN;AAEES,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,GAAG,EAAE,UAHP;AAIEL,IAAAA,QAAQ,EAAE;AAJZ,GAPiC,EAajC;AACEL,IAAAA,EAAE,EAAE,CADN;AAEES,IAAAA,IAAI,EAAE,0BAFR;AAGEC,IAAAA,GAAG,EAAE,kBAHP;AAIEL,IAAAA,QAAQ,EAAE;AAJZ,GAbiC,EAmBjC;AACEL,IAAAA,EAAE,EAAE,CADN;AAEES,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,GAAG,EAAE,SAHP;AAIEL,IAAAA,QAAQ,EAAE;AAJZ,GAnBiC,CAAD,CAAlC;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,KAAd;AAAqB,MAAA,YAAY,EAAES,UAAnC;AAA+C,MAAA,cAAc,EAAEZ;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAhDQD,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import Header from './Components/Header'\nimport Tasks from './Components/Tasks'\r\nimport { useState } from 'react'\n\nfunction App()\r\n{\r\n  const toggleReminder = (id) => {\r\n    setTasks(tasks.map((task) => { if (task.id == id) { task.reminder = !task.reminder } }));\r\n  }\r\n\r\n  const addTask = () => {\r\n    setTasks(tasks.concat({ id: tasks.length, text: \"new task\", day: \"today\", reminder: false }))\r\n  }\r\n\r\n  const deleteTask = (id) => {\r\n    console.log('Delete', id)\r\n    setTasks(tasks.filter((task) => task.id != id));\r\n  }\n\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 0,\r\n      text: \"Meeting 1\",\r\n      day: \"Oct 4th at 16:00\",\r\n      reminder: true\r\n    },\r\n    {\r\n      id: 1,\r\n      text: \"Get Dog Food\",\r\n      day: \"Oct 30th\",\r\n      reminder: true\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Pickup computer from mom\",\r\n      day: \"Oct 4th at 17:00\",\r\n      reminder: true\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Get harddrive\",\r\n      day: \"Oct 5th\",\r\n      reminder: true\r\n    }\r\n  ])\n\n  return (\n    <div className=\"container\">\n      <Header addTask={addTask} />\n      <Tasks tasks={tasks} onDeleteTask={deleteTask} toggleReminder={toggleReminder} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}